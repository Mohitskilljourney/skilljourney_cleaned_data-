# -*- coding: utf-8 -*-
"""cleaning_data_25-26_groupC-r1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LGbMZoOtvuKoagUmo3_DQCHbDI9JAeO3
"""

!pip install camelot-py[cv] pandas openpyxl

import pandas as pd

# -----------------------------
# Step 1: Load the Excel file
# -----------------------------
file_path = "/content/2025-2026_SellList+R1-Allied.xlsx"
df = pd.read_excel(file_path)

print("Columns in loaded Excel:", df.columns.tolist())

# -----------------------------
# Step 2: Detect if it's raw or summary
# -----------------------------
raw_columns = ['NEET Roll No.', 'CET Form. No.', 'Name of the Candidate',
               'Gender', 'Category', 'Quota', 'All India Rank', 'College Code', 'College Name']

if all(col in df.columns for col in raw_columns):
    print("✅ Raw candidate-level data detected. Cleaning and summarizing...")

    # -----------------------------
    # Step 3: Rename columns
    # -----------------------------
    df.rename(columns={
        'NEET Roll No.': 'RollNo',
        'CET Form. No.': 'FormNo',
        'Name of the Candidate': 'Name',
        'Gender': 'Gender',
        'Category': 'Category',
        'Quota': 'Quota',
        'All India Rank': 'AIR',
        'College Code': 'CollegeCode',
        'College Name': 'CollegeName'
    }, inplace=True)

    # -----------------------------
    # Step 4: Keep only necessary columns
    # -----------------------------
    columns_to_keep = ['RollNo', 'FormNo', 'Name', 'Gender', 'Category', 'Quota', 'AIR', 'CollegeCode', 'CollegeName']
    df = df[columns_to_keep]

    # -----------------------------
    # Step 5: Clean Quota column
    # -----------------------------
    df['Quota'] = df['Quota'].astype(str).str.strip().str.upper()
    quota_mapping = {
        'OPEN (EMD)': 'OPEN',
        'OPEN': 'OPEN',
        'SC': 'SC',
        'ST': 'ST',
        'OBC': 'OBC',
        'EWS': 'EWS'
    }
    df['Quota'] = df['Quota'].map(lambda x: quota_mapping.get(x, x))

    # -----------------------------
    # Step 6: Remove duplicates and missing data
    # -----------------------------
    df.drop_duplicates(subset=['RollNo', 'FormNo'], inplace=True)
    df.dropna(subset=['AIR', 'Quota', 'CollegeCode', 'CollegeName', 'Gender'], inplace=True)

    # Ensure AIR is numeric
    df['AIR'] = pd.to_numeric(df['AIR'], errors='coerce')
    df.dropna(subset=['AIR'], inplace=True)

    # -----------------------------
    # Step 7: Sort and summarize
    # -----------------------------
    df.sort_values(by=['CollegeCode', 'CollegeName', 'Quota', 'Gender', 'AIR'], inplace=True)

    summary = df.groupby(['CollegeCode', 'CollegeName', 'Quota', 'Gender'])['AIR'].agg(['min', 'max']).reset_index()
    summary.rename(columns={'min': 'Lowest AIR', 'max': 'Highest AIR'}, inplace=True)

    # -----------------------------
    # Step 8: Save summary
    # -----------------------------
    summary.to_excel("Cleaning_2025-2026_SellList+R1-Allied.xlsx", index=False)
    print("✅ AIR summary by college, quota, and gender saved successfully.")

else:
    print("ℹ️ Summary-level data detected. Just saving a copy safely...")
    df.to_excel("Cleaning_2025-2026_SellList+R1-Allied_Summary.xlsx", index=False)
    print("✅ File saved successfully.")













