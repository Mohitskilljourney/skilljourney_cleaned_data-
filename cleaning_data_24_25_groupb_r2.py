# -*- coding: utf-8 -*-
"""cleaning_data_24-25_groupB-r2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LGbMZoOtvuKoagUmo3_DQCHbDI9JAeO3
"""

!pip install camelot-py[cv] pandas openpyxl

import pandas as pd

# ============================================================
#  STEP 1: Load Excel file
# ============================================================
file_path = "/content/2024-2025_SeLLList+R2-Ayush.xlsx"  # <-- apna path daal de bhai
df = pd.read_excel(file_path)

print("\n📄 Columns found in your Excel file:")
for col in df.columns:
    print(f"- {col}")

# ============================================================
#  STEP 2: Auto-detect column names (case-insensitive matching)
# ============================================================
def find_col(possible_names):
    """Return first column name that matches any of the keywords."""
    for c in df.columns:
        for p in possible_names:
            if p.lower() in str(c).lower():
                return c
    return None

col_map = {
    'RollNo': find_col(['roll', 'neet roll']),
    'FormNo': find_col(['form']),
    'Name': find_col(['name']),
    'Gender': find_col(['gender']),
    'Category': find_col(['category']),
    'Quota': find_col(['quota']),
    'AIR': find_col(['all india rank', 'rank']),
    'CollegeCode': find_col(['college code']),
    'CollegeName': find_col(['college name']),
}

print("\n🧭 Auto-detected column mapping:")
for k, v in col_map.items():
    print(f"{k} → {v}")

# Drop None mappings and rename columns
col_map = {k: v for k, v in col_map.items() if v is not None}
df.rename(columns=col_map, inplace=True)

# ============================================================
#  STEP 3: Keep relevant columns (only ones that exist)
# ============================================================
columns_to_keep = ['RollNo', 'FormNo', 'Name', 'Gender', 'Category',
                   'Quota', 'AIR', 'CollegeCode', 'CollegeName']
df = df[[c for c in columns_to_keep if c in df.columns]]

print("\n✅ Columns retained after cleaning:", df.columns.tolist())

# ============================================================
#  STEP 4: Clean Quota (no mixing, only trim + uppercase)
# ============================================================
if 'Quota' in df.columns:
    df['Quota'] = df['Quota'].astype(str).str.strip().str.upper()
    print("\n🧩 Unique Quotas Found:")
    print(df['Quota'].unique())

# ============================================================
#  STEP 5: Remove duplicates & handle missing data
# ============================================================
if {'RollNo', 'FormNo'}.issubset(df.columns):
    df.drop_duplicates(subset=['RollNo', 'FormNo'], inplace=True)

if 'AIR' in df.columns:
    df['AIR'] = pd.to_numeric(df['AIR'], errors='coerce')
    df.dropna(subset=['AIR'], inplace=True)
else:
    print("⚠️ 'AIR' column not found or mismatched in Excel!")

# Drop if essential columns missing
essential_cols = [c for c in ['Quota', 'CollegeCode', 'CollegeName', 'Gender'] if c in df.columns]
if essential_cols:
    df.dropna(subset=essential_cols, inplace=True)

# ============================================================
#  STEP 6: Safe sorting
# ============================================================
sort_cols = [c for c in ['CollegeCode', 'CollegeName', 'Quota', 'Gender', 'AIR'] if c in df.columns]
if sort_cols:
    df.sort_values(by=sort_cols, inplace=True)
else:
    print("⚠️ Skipping sorting because key columns missing:", sort_cols)

# ============================================================
#  STEP 7: Generate Summary (if possible)
# ============================================================
summary = None
if {'CollegeCode', 'CollegeName', 'Quota', 'Gender', 'AIR'}.issubset(df.columns):
    summary = (
        df.groupby(['CollegeCode', 'CollegeName', 'Quota', 'Gender'])['AIR']
          .agg(['min', 'max'])
          .reset_index()
          .rename(columns={'min': 'Lowest AIR', 'max': 'Highest AIR'})
    )
    print("\n✅ Summary created successfully.")
else:
    print("❌ Could not create summary — missing some columns (AIR/College info).")

# ============================================================
#  STEP 8: Save both cleaned data and summary
# ============================================================
cleaned_path = "Cleaned_FullData_R2_AYUSH.xlsx"
summary_path = "Summary_R2_AYUSH.xlsx"

df.to_excel(cleaned_path, index=False)
if summary is not None:
    summary.to_excel(summary_path, index=False)

print("\n💾 Files Saved Successfully:")
print(f"📘 Full Cleaned Data → {cleaned_path}")
if summary is not None:
    print(f"📗 Summary (Lowest & Highest AIR) → {summary_path}")

print("\n✅ All Quotas preserved exactly as they appeared in Excel — no merging done.")





import pandas as pd

# -----------------------------
# Step 1: Load the Excel file
# -----------------------------
file_path = "/content/2024-2025_SeLLList+R2-Ayush.xlsx"  # ORIGINAL FILE
df = pd.read_excel(file_path)


# -----------------------------
# Step 2: Inspect and rename columns
# -----------------------------
print("Columns in loaded Excel:", df.columns.tolist())

df.rename(columns={
    'NEET Roll No.': 'RollNo',
    'CET Form. No.': 'FormNo',
    'Name of the Candidate': 'Name',
    'Gender': 'Gender',
    'Category': 'Category',
    'Quota': 'Quota',
    'All India Rank': 'AIR',
    'College Code': 'CollegeCode',
    'College Name': 'CollegeName'
}, inplace=True)

# -----------------------------
# Step 3: Keep only necessary columns
# -----------------------------
columns_to_keep = ['RollNo', 'FormNo', 'Name', 'Gender', 'Category', 'Quota', 'AIR', 'CollegeCode', 'CollegeName']
df = df[columns_to_keep]

# -----------------------------
# Step 4: Clean Quota column
# -----------------------------
df['Quota'] = df['Quota'].astype(str).str.strip().str.upper()
quota_mapping = {
    'OPEN (EMD)': 'OPEN',
    'OPEN': 'OPEN',
    'SC': 'SC',
    'ST': 'ST',
    'OBC': 'OBC',
    'EWS': 'EWS'
}
df['Quota'] = df['Quota'].map(lambda x: quota_mapping.get(x, x))

# -----------------------------
# Step 5: Remove duplicates and missing data
# -----------------------------
df.drop_duplicates(subset=['RollNo', 'FormNo'], inplace=True)
df.dropna(subset=['AIR', 'Quota', 'CollegeCode', 'CollegeName', 'Gender'], inplace=True)

# Ensure AIR is numeric
df['AIR'] = pd.to_numeric(df['AIR'], errors='coerce')
df.dropna(subset=['AIR'], inplace=True)

# -----------------------------
# Step 6: Sort values
# -----------------------------
df.sort_values(by=['CollegeCode', 'CollegeName', 'Quota', 'Gender', 'AIR'], inplace=True)

# -----------------------------
# Step 7: Generate summary
# -----------------------------
summary = df.groupby(['CollegeCode', 'CollegeName', 'Quota', 'Gender'])['AIR'].agg(['min', 'max']).reset_index()
summary.rename(columns={'min': 'Lowest AIR', 'max': 'Highest AIR'}, inplace=True)

# -----------------------------
# Step 8: Save summary
# -----------------------------
summary.to_excel("Cleaning_2024-2025_SellList-R2-AYUSH.xlsx", index=False)
print("✅ AIR summary by college, quota, and gender saved as Cleaning_2024-2025_SellList-R1-AYUSH.xlsx")